version: '3'
services:

  db:
    image: mongo
    container_name: db
    ports:
     - "4002:27017"
    restart: always

  db-fixture:
    image: db-fixture
    build: ./db-fixture
    container_name: db-fixture
    depends_on:
      - db

  service:
    image: service
    build:
      context: ./service
      dockerfile: Dockerfile-dev
    container_name: service
    volumes:
     - ./tmp/npm:/root/.npm:z
     - ./service/src:/usr/src/app/src:z
    ports:
     - "4001:80"
    environment:
     - PORT=80
     - DBHOST=mongodb://db:27017
     - NODE_ENV=development
     - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
#     - OTEL_EXPORTER_OTLP_ENDPOINT=http://satellite:8383
     - OTEL_RESOURCE_ATTRIBUTES=service.name=service
    depends_on:
     - db
    restart: always

  web:
    image: web
    build:
      context: ./web
      dockerfile: Dockerfile-dev
    container_name: web
    volumes:
     - ./tmp/npm:/root/.npm:z
     - ./web/src:/usr/src/app/src:z
    ports:
     - "4000:80"
    environment:
     - PORT=80
     - NODE_ENV=development
     - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
#     - OTEL_EXPORTER_OTLP_ENDPOINT=http://satellite:8383
     - OTEL_RESOURCE_ATTRIBUTES=service.name=web
    depends_on:
     - service
    restart: always

## TELEMETRY CONTAINERS
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.47.0
    container_name: otel-collector
    environment:
      - LIGHTSTEP_ACCESS_TOKEN=${LIGHTSTEP_ACCESS_TOKEN}
    ports:
      # This is default port for listening to GRPC protocol
      - 4317:4317
      # This is default port for listening to HTTP protocol
      - 4318:4318
      # This is default port for zpages debugging
      - 55679:55679
    volumes:
      - ./otel-collector/conf:/etc/otelcol-contrib/
      # for otel/opentelemetry-collector-contrib:0.40.0 and below
      #- ./otel-collector/conf:/etc/otel

  jaeger:
    image: jaegertracing/all-in-one:1.30
    container_name: jaeger
    ports:
      - 14250:14250
      - 16686:16686


## THIS IS TO TEST WITH LIGHTSTEP SATELLITE INSTEAD OF COLLECTOR
#  satellite:
#    image: lightstep/microsatellite:latest
#    container_name: satellite
#    environment:
#      - COLLECTOR_SATELLITE_KEY=${LIGHTSTEP_SATELLITE_KEY}
#      - COLLECTOR_DISABLE_ACCESS_TOKEN_CHECKING=true
#      - COLLECTOR_PROJECT_NAME=petclinic
#      - COLLECTOR_POOL=petclinic-dev
#      - COLLECTOR_INGESTION_TAGS=deployment.environment:dev
#      - COLLECTOR_PLAIN_PORT=8383
#      - COLLECTOR_SECURE_PORT=9393
#      - COLLECTOR_DIAGNOSTIC_PORT=8000
#      - COLLECTOR_ADMIN_PLAIN_PORT=8180
#    ports:
#      - "8383:8383" #Span ingest, Required for unsecure traffic, or secure traffic that terminates it's secure status before it hits the satellite
#      - "9393:9393" #Span ingest Required for secure traffic
#      - "8000:8000" #Diagnostics
#      - "8180:8180" #COLLECTOR_ADMIN_PLAIN_PORT, Required for health checks
